# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона,
например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список,
где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список, в котором содержатся IP-адреса
и/или диапазоны IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные
адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только
последний октет адреса.

Функция возвращает список IP-адресов.

Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""
import ipaddress
from pprint import pprint

#def convert_ranges_to_ip_list(ip_list):
ip_add = "192.168.100.10-15"
ip_ad1 = ip_add.split('-')
ip_start = ipaddress.ip_address(ip_ad1[0])
ip_ad = ip_ad1[0].split('.')
ip_stop = ipaddress.ip_address('.'.join(ip_ad[:3]+[ip_ad1[-1]]))
#print(ip_start, ip_stop)

#ip_addr = []
ip_addr = ipaddress.ip_address(ip) for ip int range(int(ip_start), int(ip_stop)+1) 
#for ip in range(int(ip_start), int(ip_stop)+1):
#    ip_addr.append(ipaddress.ip_address(ip))
pprint(ip_addr)
